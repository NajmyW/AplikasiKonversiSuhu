
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Acer
 */
public class KonversiSuhu extends javax.swing.JFrame {

    /**
     * Creates new form KonversiSuhu
     */
    public KonversiSuhu() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        konversiBtn = new javax.swing.JButton();
        UlangBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        listSuhu = new javax.swing.JComboBox<>();
        inputAngka = new javax.swing.JTextField();
        result = new javax.swing.JTextField();
        Cel = new javax.swing.JRadioButton();
        Kel = new javax.swing.JRadioButton();
        Rea = new javax.swing.JRadioButton();
        Fah = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 792, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBackground(new java.awt.Color(108, 200, 200));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "KONVERSI SUHU", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(0, 0, 153))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel1.setText("Masukan Suhu :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 18, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel2.setText("Hasil Konversi :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 15, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        konversiBtn.setText("Konversi");
        konversiBtn.setEnabled(false);
        konversiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                konversiBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(13, 15, 7, 0);
        jPanel2.add(konversiBtn, gridBagConstraints);

        UlangBtn.setText("Ulang");
        UlangBtn.setEnabled(false);
        UlangBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UlangBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(13, 15, 7, 0);
        jPanel2.add(UlangBtn, gridBagConstraints);

        jButton3.setText("Keluar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(13, 15, 7, 0);
        jPanel2.add(jButton3, gridBagConstraints);

        listSuhu.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        listSuhu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Convert Suhu", "Celsius", "Fahrenheit", "Kelvin", "Reamur" }));
        listSuhu.setEnabled(false);
        listSuhu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listSuhuItemStateChanged(evt);
            }
        });
        listSuhu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listSuhuActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(19, 15, 12, 0);
        jPanel2.add(listSuhu, gridBagConstraints);

        inputAngka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAngkaActionPerformed(evt);
            }
        });
        inputAngka.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputAngkaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputAngkaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 20, 0);
        jPanel2.add(inputAngka, gridBagConstraints);

        result.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        result.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.insets = new java.awt.Insets(6, 15, 7, 0);
        jPanel2.add(result, gridBagConstraints);

        buttonGroup1.add(Cel);
        Cel.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        Cel.setText("Celcius");
        Cel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CelItemStateChanged(evt);
            }
        });
        Cel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 10, 2, 0);
        jPanel2.add(Cel, gridBagConstraints);

        buttonGroup1.add(Kel);
        Kel.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        Kel.setText("Kelvin");
        Kel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                KelItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 10, 2, 0);
        jPanel2.add(Kel, gridBagConstraints);

        buttonGroup1.add(Rea);
        Rea.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        Rea.setText("Reamur");
        Rea.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ReaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 10, 2, 0);
        jPanel2.add(Rea, gridBagConstraints);

        buttonGroup1.add(Fah);
        Fah.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        Fah.setText("Fahrenheit");
        Fah.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                FahItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 10, 2, 0);
        jPanel2.add(Fah, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel3.setText("Pilih Jenis Suhu Pertama :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 8, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel4.setText("Konversi ke Suhu :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CelActionPerformed

    private void inputAngkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAngkaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAngkaActionPerformed

    
    private void konversiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_konversiBtnActionPerformed
        try {
        // Ambil suhu input dari pengguna
        double inputTemp = Double.parseDouble(inputAngka.getText());

        // Ambil unit asal dari JComboBox
        String fromUnit = (String) listSuhu.getSelectedItem();
        int cekList = listSuhu.getSelectedIndex();

        // Validasi: Pastikan pengguna telah memilih unit asal di ComboBox
        if (fromUnit != null && !fromUnit.isEmpty() && cekList != 0) {
        } else {
            JOptionPane.showMessageDialog(this, "Silahkan pilih jenis Konversi suhu ke-!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
            }
        // Menentukan radio button yang dipilih
            String radio;
        if (Cel.isSelected()) {
            radio = "Celsius";
        } else if (Fah.isSelected()) {
            radio = "Fahrenheit";
        } else if (Kel.isSelected()) {
            radio = "Kelvin";
        } else if (Rea.isSelected()) {
            radio = "Reamur";
        } else {
            // Jika tidak ada radio button yang dipilih, tampilkan pesan
            JOptionPane.showMessageDialog(this, "Silahkan pilih jenis suhu awal!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
              // Membuat objek dari TemperatureConverter
            TemperatureConverter converter = new TemperatureConverter();

            // Panggil metode konversi suhu
            double convertTemperature = converter.convertTemperature(inputTemp, radio,fromUnit);

        // Tampilkan hasil konversi
        result.setText(convertTemperature + " " + listSuhu.getSelectedItem());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Masukkan nilai suhu yang valid.", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_konversiBtnActionPerformed

    private void listSuhuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listSuhuActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_listSuhuActionPerformed

    private void UlangBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UlangBtnActionPerformed
        // TODO add your handling code here:
        inputAngka.setText("");
        result.setText("");
        listSuhu.setSelectedIndex(0);
        listSuhu.setEnabled(false);
        buttonGroup1.clearSelection();
        inputAngka.requestFocus();
        konversiBtn.setEnabled(false); 
        UlangBtn.setEnabled(false);
    }//GEN-LAST:event_UlangBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void filterKeyTyped(java.awt.event.KeyEvent evt) {
    char c = evt.getKeyChar();  // Mengambil karakter dari event
    // Mengecek apakah karakter adalah angka, backspace, atau delete
    if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
        Toolkit.getDefaultToolkit().beep();  // Memainkan suara beep
        // Menampilkan pesan dialog yang menginformasikan hanya angka yang diperbolehkan
        JOptionPane.showMessageDialog(null, "Masukkan hanya angka!");
        evt.consume();  // Mengkonsumsi event agar karakter tidak diproses lebih lanjut
    }
}
    private void inputAngkaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputAngkaKeyTyped
        // TODO add your handling code here:
        filterKeyTyped(evt);
    }//GEN-LAST:event_inputAngkaKeyTyped

    private void inputAngkaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputAngkaKeyReleased
        // TODO add your handling code here:
        String input = inputAngka.getText();
        if (input.isEmpty()){
            result.setText("");
            listSuhu.setSelectedIndex(0);
            buttonGroup1.clearSelection();
            inputAngka.requestFocus();
            konversiBtn.setEnabled(false); 
            UlangBtn.setEnabled(false);
        }
       hitungEventItem();
    }//GEN-LAST:event_inputAngkaKeyReleased
private void hitungEventItem() {
    try {
        // Menentukan radio button yang dipilih
        String radio = null;
        boolean cek = false; // menggunakan tipe primitif boolean
        
        if (Cel.isSelected()) {
            radio = "Celsius";
            cek = true;
        } else if (Fah.isSelected()) {
            radio = "Fahrenheit";
            cek = true;
        } else if (Kel.isSelected()) {
            radio = "Kelvin";
            cek = true;
        } else if (Rea.isSelected()) {
            radio = "Reamur";
            cek = true;
        }
        
        // Ambil unit asal dari JComboBox
        String fromUnit = (String) listSuhu.getSelectedItem();

        // Periksa jika radio button belum dipilih, `fromUnit` null, input kosong, atau fromUnit adalah opsi default
        if (!cek || fromUnit == null || fromUnit.isEmpty() || fromUnit.equals("Pilih Convert Suhu") || inputAngka.getText().isEmpty()) {
            return; // Jika kondisi tidak valid, keluar dari fungsi
        }

        // Ambil suhu input dari pengguna
        double inputTemp = Double.parseDouble(inputAngka.getText());

        // Membuat objek dari TemperatureConverter
        TemperatureConverter converter = new TemperatureConverter();

        // Panggil metode konversi suhu
        double convertTemperature = converter.convertTemperature(inputTemp, radio, fromUnit);

        // Tampilkan hasil konversi
        result.setText(convertTemperature + " " + listSuhu.getSelectedItem());
        konversiBtn.setEnabled(true); 
        UlangBtn.setEnabled(true);
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, "Pilih unit suhu yang valid.", "Kesalahan Konversi", JOptionPane.ERROR_MESSAGE);
    }
}


    private void listSuhuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listSuhuItemStateChanged
        // TODO add your handling code here:
         try {
        konversiBtn.setEnabled(true); 
        UlangBtn.setEnabled(true);
        hitungEventItem();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Masukkan nilai suhu yang valid.", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_listSuhuItemStateChanged

    private void CelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CelItemStateChanged
        // TODO add your handling code here:
        listSuhu.setEnabled(true);
        hitungEventItem();
    }//GEN-LAST:event_CelItemStateChanged

    private void ReaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ReaItemStateChanged
        // TODO add your handling code here:
        listSuhu.setEnabled(true);
        hitungEventItem();
    }//GEN-LAST:event_ReaItemStateChanged

    private void KelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_KelItemStateChanged
        // TODO add your handling code here:
        listSuhu.setEnabled(true);
        hitungEventItem();
    }//GEN-LAST:event_KelItemStateChanged

    private void FahItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_FahItemStateChanged
        // TODO add your handling code here:
        listSuhu.setEnabled(true);
        hitungEventItem();
    }//GEN-LAST:event_FahItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KonversiSuhu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Cel;
    private javax.swing.JRadioButton Fah;
    private javax.swing.JRadioButton Kel;
    private javax.swing.JRadioButton Rea;
    private javax.swing.JButton UlangBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField inputAngka;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JButton konversiBtn;
    private javax.swing.JComboBox<String> listSuhu;
    private javax.swing.JTextField result;
    // End of variables declaration//GEN-END:variables
}
